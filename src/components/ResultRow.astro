---
import type { CurrencyOptionCode } from '@constants/currencies';
import {formatCurrency, type ResultRow} from '@utils';
import Image from 'astro/components/Image.astro';

interface Props {
  row: ResultRow;
  currency: CurrencyOptionCode
}

const { row, currency } = Astro.props;

if (['MATIC', 'USDC', 'USDT', 'OP', 'AVAX'].includes(row.code)) return '';


const formattedAmount = formatCurrency(row.amount, row.code);
const difference = formatCurrency(Math.abs(row.difference), currency);
const millionAmount = formatCurrency(row.millionAmount, currency);
const one = formatCurrency(1, currency)
const renderedMillionAmount = row.millionAmount < 1 ? `< ${one}` : millionAmount

---

<div class="row">
  <div class="column column--name">
    {row.flag}
    {row.name} ({row.code})
  </div>
  {
    row.isOverMillion ? (
      <div class="column column--amount amount--green">
        <Image
          src="/images/check.svg"
          alt="Check mark"
          width="32"
          height="32"
        />
        <span>{formattedAmount}</span>
      </div>
      <div class="column column--result amount--green">
        You only needed <span>{renderedMillionAmount}</span> to make a million {row.code}
      </div>
    ) : (
      <div class="column column--amount amount--red">
        <Image
          src="/images/cross.svg"
          alt="Cross mark"
          width="32"
          height="32"
        />
        <span>{formattedAmount}</span>
      </div>
      <div class="column column--result amount--red">
        You need <span>{difference}</span> more to make a million {row.code}
      </div>
    )
  }
</div>

<style>
  .row {
    display: flex;
    flex-direction: column;
    gap: 0.5rem;
    padding: 1rem 0;
    border-bottom: 1px solid var(--color-primary-600);
  }
  
  .row:nth-of-type(2) {
    border-top: 1px solid var(--color-primary-600);
  }

  .column {
    font-size: 1.25rem;
  }

  .column--amount {
    display: flex;
    align-items: center;
    font-weight: 700;
  }

  .column--amount img {
    object-fit: cover;
    margin-left: -0.25rem;
  }

  .amount--green {
    color: var(--color-green)
  }

  .amount--red {
    color: var(--color-red)
  }

  .column--result span {
    font-weight: 500;
    text-decoration: underline;
  }

  @media (min-width: 90rem) {
    .row {
      flex-direction: row;
      gap: 2rem;
      padding: 0;
    }

    .row:nth-of-type(2) {
      border-top: 1px solid var(--color-primary-700);
    }

    .column {
      padding: 0.75rem 0;
    }

    .column--name {
      width: 30rem;
    }

    .column--result {
      width: 36rem;
    }

    .column--amount {
      width: 18rem;
    }
  }
</style>
